/* Generated by Yosys 0.43 (git sha1 ead4718e5, g++ 11.4.0-1ubuntu1~22.04 -fPIC -Os) */

(* src = "gcd.v:109.1-320.10" *)
module GcdUnitCtrlRTL_0x4d0fc71ead8d3d9e(a_mux_sel, a_reg_en, b_mux_sel, b_reg_en, clk, is_a_lt_b, is_b_zero, req_rdy, req_val, reset, resp_rdy, resp_val);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  (* src = "gcd.v:111.24-111.33" *)
  wire _18_;
  (* src = "gcd.v:111.24-111.33" *)
  wire _19_;
  (* src = "gcd.v:112.24-112.32" *)
  wire _20_;
  (* src = "gcd.v:113.24-113.33" *)
  wire _21_;
  (* src = "gcd.v:114.24-114.32" *)
  wire _22_;
  (* src = "gcd.v:116.24-116.33" *)
  wire _23_;
  (* src = "gcd.v:117.24-117.33" *)
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  (* src = "gcd.v:119.24-119.31" *)
  wire _28_;
  (* src = "gcd.v:121.24-121.32" *)
  wire _29_;
  (* src = "gcd.v:122.24-122.32" *)
  wire _30_;
  (* src = "gcd.v:131.19-131.28" *)
  wire _31_;
  (* src = "gcd.v:131.19-131.28" *)
  wire _32_;
  (* src = "gcd.v:148.19-148.28" *)
  wire _33_;
  (* src = "gcd.v:148.19-148.28" *)
  wire _34_;
  (* src = "gcd.v:111.24-111.33" *)
  output [1:0] a_mux_sel;
  wire [1:0] a_mux_sel;
  (* src = "gcd.v:112.24-112.32" *)
  output a_reg_en;
  wire a_reg_en;
  (* src = "gcd.v:113.24-113.33" *)
  output b_mux_sel;
  wire b_mux_sel;
  (* src = "gcd.v:114.24-114.32" *)
  output b_reg_en;
  wire b_reg_en;
  (* src = "gcd.v:115.24-115.27" *)
  input clk;
  wire clk;
  (* src = "gcd.v:126.19-126.32" *)
  wire [1:0] curr_state__0;
  (* src = "gcd.v:127.19-127.35" *)
  wire [1:0] current_state__1;
  (* src = "gcd.v:116.24-116.33" *)
  input is_a_lt_b;
  wire is_a_lt_b;
  (* src = "gcd.v:117.24-117.33" *)
  input is_b_zero;
  wire is_b_zero;
  (* src = "gcd.v:130.19-130.32" *)
  wire [1:0] next_state__0;
  (* src = "gcd.v:118.24-118.31" *)
  output req_rdy;
  wire req_rdy;
  (* src = "gcd.v:119.24-119.31" *)
  input req_val;
  wire req_val;
  (* src = "gcd.v:120.24-120.29" *)
  input reset;
  wire reset;
  (* src = "gcd.v:121.24-121.32" *)
  input resp_rdy;
  wire resp_rdy;
  (* src = "gcd.v:122.24-122.32" *)
  output resp_val;
  wire resp_val;
  (* src = "gcd.v:147.19-147.28" *)
  wire \state$clk ;
  (* src = "gcd.v:131.19-131.28" *)
  wire [1:0] \state$in_ ;
  (* src = "gcd.v:148.19-148.28" *)
  wire [1:0] \state$out ;
  (* src = "gcd.v:146.19-146.30" *)
  wire \state$reset ;
  sky130_fd_sc_hd__nor2_1 _35_ (
    .A(_34_),
    .B(_33_),
    .Y(_21_)
  );
  sky130_fd_sc_hd__lpflow_isobufsrc_1 _36_ (
    .A(_34_),
    .SLEEP(_33_),
    .X(_30_)
  );
  sky130_fd_sc_hd__and3b_1 _37_ (
    .A_N(_34_),
    .B(_33_),
    .C(_23_),
    .X(_19_)
  );
  sky130_fd_sc_hd__or2_0 _38_ (
    .A(_21_),
    .B(_19_),
    .X(_22_)
  );
  sky130_fd_sc_hd__inv_1 _39_ (
    .A(_33_),
    .Y(_25_)
  );
  sky130_fd_sc_hd__nor3_1 _40_ (
    .A(_34_),
    .B(_25_),
    .C(_23_),
    .Y(_18_)
  );
  sky130_fd_sc_hd__inv_1 _41_ (
    .A(_34_),
    .Y(_20_)
  );
  sky130_fd_sc_hd__nand2b_1 _42_ (
    .A_N(_34_),
    .B(_28_),
    .Y(_26_)
  );
  sky130_fd_sc_hd__and4bb_1 _43_ (
    .A_N(_34_),
    .B_N(_23_),
    .C(_24_),
    .D(_33_),
    .X(_27_)
  );
  sky130_fd_sc_hd__a21oi_1 _44_ (
    .A1(_25_),
    .A2(_26_),
    .B1(_27_),
    .Y(_31_)
  );
  sky130_fd_sc_hd__a2bb2oi_1 _45_ (
    .A1_N(_34_),
    .A2_N(_27_),
    .B1(_30_),
    .B2(_29_),
    .Y(_32_)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "gcd.v:150.28-156.4" *)
  RegRst_0x9f365fdf6c8998a state (
    .clk(clk),
    .in_(\state$in_ ),
    .out(\state$out ),
    .reset(reset)
  );
  assign curr_state__0 = \state$out ;
  assign current_state__1 = \state$out ;
  assign next_state__0 = \state$in_ ;
  assign req_rdy = b_mux_sel;
  assign \state$clk  = clk;
  assign \state$reset  = reset;
  assign _34_ = \state$out [1];
  assign _33_ = \state$out [0];
  assign b_mux_sel = _21_;
  assign resp_val = _30_;
  assign _23_ = is_a_lt_b;
  assign b_reg_en = _22_;
  assign a_mux_sel[0] = _18_;
  assign a_mux_sel[1] = _19_;
  assign a_reg_en = _20_;
  assign _28_ = req_val;
  assign _24_ = is_b_zero;
  assign _29_ = resp_rdy;
  assign \state$in_ [0] = _31_;
  assign \state$in_ [1] = _32_;
endmodule

(* src = "gcd.v:369.1-544.10" *)
module GcdUnitDpathRTL_0x4d0fc71ead8d3d9e(a_mux_sel, a_reg_en, b_mux_sel, b_reg_en, clk, is_a_lt_b, is_b_zero, req_msg_a, req_msg_b, reset, resp_msg);
  (* src = "gcd.v:407.19-407.29" *)
  wire \a_lt_b$clk ;
  (* src = "gcd.v:408.19-408.29" *)
  wire [15:0] \a_lt_b$in0 ;
  (* src = "gcd.v:409.19-409.29" *)
  wire [15:0] \a_lt_b$in1 ;
  (* src = "gcd.v:410.19-410.29" *)
  wire \a_lt_b$out ;
  (* src = "gcd.v:406.19-406.31" *)
  wire \a_lt_b$reset ;
  (* src = "gcd.v:440.19-440.28" *)
  wire \a_mux$clk ;
  (* src = "gcd.v:437.19-437.32" *)
  wire [15:0] \a_mux$in_$000 ;
  (* src = "gcd.v:438.19-438.32" *)
  wire [15:0] \a_mux$in_$001 ;
  (* src = "gcd.v:439.19-439.32" *)
  wire [15:0] \a_mux$in_$002 ;
  (* src = "gcd.v:442.19-442.28" *)
  wire [15:0] \a_mux$out ;
  (* src = "gcd.v:436.19-436.30" *)
  wire \a_mux$reset ;
  (* src = "gcd.v:441.19-441.28" *)
  wire [1:0] \a_mux$sel ;
  (* src = "gcd.v:371.24-371.33" *)
  input [1:0] a_mux_sel;
  wire [1:0] a_mux_sel;
  (* src = "gcd.v:392.19-392.28" *)
  wire \a_reg$clk ;
  (* src = "gcd.v:393.19-393.27" *)
  wire \a_reg$en ;
  (* src = "gcd.v:391.19-391.28" *)
  wire [15:0] \a_reg$in_ ;
  (* src = "gcd.v:394.19-394.28" *)
  wire [15:0] \a_reg$out ;
  (* src = "gcd.v:390.19-390.30" *)
  wire \a_reg$reset ;
  (* src = "gcd.v:372.24-372.32" *)
  input a_reg_en;
  wire a_reg_en;
  (* src = "gcd.v:459.19-459.28" *)
  wire \b_mux$clk ;
  (* src = "gcd.v:457.19-457.32" *)
  wire [15:0] \b_mux$in_$000 ;
  (* src = "gcd.v:458.19-458.32" *)
  wire [15:0] \b_mux$in_$001 ;
  (* src = "gcd.v:461.19-461.28" *)
  wire [15:0] \b_mux$out ;
  (* src = "gcd.v:456.19-456.30" *)
  wire \b_mux$reset ;
  (* src = "gcd.v:460.19-460.28" *)
  wire \b_mux$sel ;
  (* src = "gcd.v:373.24-373.33" *)
  input b_mux_sel;
  wire b_mux_sel;
  (* src = "gcd.v:492.19-492.28" *)
  wire \b_reg$clk ;
  (* src = "gcd.v:493.19-493.27" *)
  wire \b_reg$en ;
  (* src = "gcd.v:491.19-491.28" *)
  wire [15:0] \b_reg$in_ ;
  (* src = "gcd.v:494.19-494.28" *)
  wire [15:0] \b_reg$out ;
  (* src = "gcd.v:490.19-490.30" *)
  wire \b_reg$reset ;
  (* src = "gcd.v:374.24-374.32" *)
  input b_reg_en;
  wire b_reg_en;
  (* src = "gcd.v:386.19-386.28" *)
  wire [15:0] b_reg_out;
  (* src = "gcd.v:424.19-424.29" *)
  wire \b_zero$clk ;
  (* src = "gcd.v:423.19-423.29" *)
  wire [15:0] \b_zero$in_ ;
  (* src = "gcd.v:425.19-425.29" *)
  wire \b_zero$out ;
  (* src = "gcd.v:422.19-422.31" *)
  wire \b_zero$reset ;
  (* src = "gcd.v:375.24-375.27" *)
  input clk;
  wire clk;
  (* src = "gcd.v:376.24-376.33" *)
  output is_a_lt_b;
  wire is_a_lt_b;
  (* src = "gcd.v:377.24-377.33" *)
  output is_b_zero;
  wire is_b_zero;
  (* src = "gcd.v:378.24-378.33" *)
  input [15:0] req_msg_a;
  wire [15:0] req_msg_a;
  (* src = "gcd.v:379.24-379.33" *)
  input [15:0] req_msg_b;
  wire [15:0] req_msg_b;
  (* src = "gcd.v:380.24-380.29" *)
  input reset;
  wire reset;
  (* src = "gcd.v:381.24-381.32" *)
  output [15:0] resp_msg;
  wire [15:0] resp_msg;
  (* src = "gcd.v:475.19-475.26" *)
  wire \sub$clk ;
  (* src = "gcd.v:476.19-476.26" *)
  wire [15:0] \sub$in0 ;
  (* src = "gcd.v:477.19-477.26" *)
  wire [15:0] \sub$in1 ;
  (* src = "gcd.v:478.19-478.26" *)
  wire [15:0] \sub$out ;
  (* src = "gcd.v:474.19-474.28" *)
  wire \sub$reset ;
  (* src = "gcd.v:385.19-385.26" *)
  wire [15:0] sub_out;
  (* module_not_derived = 32'd1 *)
  (* src = "gcd.v:412.35-419.4" *)
  LtComparator_0x422b1f52edd46a85 a_lt_b (
    .clk(clk),
    .in0(\a_lt_b$in0 ),
    .in1(\a_lt_b$in1 ),
    .out(\a_lt_b$out ),
    .reset(reset)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "gcd.v:444.26-453.4" *)
  Mux_0x683fa1a418b072c9 a_mux (
    .clk(clk),
    .\in_$000 (req_msg_a),
    .\in_$001 (\a_mux$in_$001 ),
    .\in_$002 (\a_lt_b$in1 ),
    .out(\a_mux$out ),
    .reset(reset),
    .sel(a_mux_sel)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "gcd.v:396.28-403.4" *)
  RegEn_0x68db79c4ec1d6e5b a_reg (
    .clk(clk),
    .en(a_reg_en),
    .in_(\a_mux$out ),
    .out(\a_lt_b$in0 ),
    .reset(reset)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "gcd.v:463.25-471.4" *)
  Mux_0xdd6473406d1a99a b_mux (
    .clk(clk),
    .\in_$000 (\a_lt_b$in0 ),
    .\in_$001 (req_msg_b),
    .out(\b_mux$out ),
    .reset(reset),
    .sel(b_mux_sel)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "gcd.v:496.28-503.4" *)
  RegEn_0x68db79c4ec1d6e5b b_reg (
    .clk(clk),
    .en(b_reg_en),
    .in_(\b_mux$out ),
    .out(\a_lt_b$in1 ),
    .reset(reset)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "gcd.v:427.37-433.4" *)
  ZeroComparator_0x422b1f52edd46a85 b_zero (
    .clk(clk),
    .in_(\a_lt_b$in1 ),
    .out(\b_zero$out ),
    .reset(reset)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "gcd.v:480.33-487.4" *)
  Subtractor_0x422b1f52edd46a85 sub (
    .clk(clk),
    .in0(\a_lt_b$in0 ),
    .in1(\a_lt_b$in1 ),
    .out(\a_mux$in_$001 ),
    .reset(reset)
  );
  assign \a_lt_b$clk  = clk;
  assign \a_lt_b$reset  = reset;
  assign \a_mux$clk  = clk;
  assign \a_mux$in_$000  = req_msg_a;
  assign \a_mux$in_$002  = \a_lt_b$in1 ;
  assign \a_mux$reset  = reset;
  assign \a_mux$sel  = a_mux_sel;
  assign \a_reg$clk  = clk;
  assign \a_reg$en  = a_reg_en;
  assign \a_reg$in_  = \a_mux$out ;
  assign \a_reg$out  = \a_lt_b$in0 ;
  assign \a_reg$reset  = reset;
  assign \b_mux$clk  = clk;
  assign \b_mux$in_$000  = \a_lt_b$in0 ;
  assign \b_mux$in_$001  = req_msg_b;
  assign \b_mux$reset  = reset;
  assign \b_mux$sel  = b_mux_sel;
  assign \b_reg$clk  = clk;
  assign \b_reg$en  = b_reg_en;
  assign \b_reg$in_  = \b_mux$out ;
  assign \b_reg$out  = \a_lt_b$in1 ;
  assign \b_reg$reset  = reset;
  assign b_reg_out = \a_lt_b$in1 ;
  assign \b_zero$clk  = clk;
  assign \b_zero$in_  = \a_lt_b$in1 ;
  assign \b_zero$reset  = reset;
  assign is_a_lt_b = \a_lt_b$out ;
  assign is_b_zero = \b_zero$out ;
  assign resp_msg = \a_mux$in_$001 ;
  assign \sub$clk  = clk;
  assign \sub$in0  = \a_lt_b$in0 ;
  assign \sub$in1  = \a_lt_b$in1 ;
  assign \sub$out  = \a_mux$in_$001 ;
  assign \sub$reset  = reset;
  assign sub_out = \a_mux$in_$001 ;
endmodule

(* src = "gcd.v:588.1-611.10" *)
module LtComparator_0x422b1f52edd46a85(clk, in0, in1, out, reset);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  (* src = "gcd.v:591.24-591.27" *)
  wire _077_;
  (* src = "gcd.v:591.24-591.27" *)
  wire _078_;
  (* src = "gcd.v:591.24-591.27" *)
  wire _079_;
  (* src = "gcd.v:591.24-591.27" *)
  wire _080_;
  (* src = "gcd.v:591.24-591.27" *)
  wire _081_;
  (* src = "gcd.v:591.24-591.27" *)
  wire _082_;
  (* src = "gcd.v:591.24-591.27" *)
  wire _083_;
  (* src = "gcd.v:591.24-591.27" *)
  wire _084_;
  (* src = "gcd.v:591.24-591.27" *)
  wire _085_;
  (* src = "gcd.v:591.24-591.27" *)
  wire _086_;
  (* src = "gcd.v:591.24-591.27" *)
  wire _087_;
  (* src = "gcd.v:591.24-591.27" *)
  wire _088_;
  (* src = "gcd.v:591.24-591.27" *)
  wire _089_;
  (* src = "gcd.v:591.24-591.27" *)
  wire _090_;
  (* src = "gcd.v:591.24-591.27" *)
  wire _091_;
  (* src = "gcd.v:591.24-591.27" *)
  wire _092_;
  (* src = "gcd.v:592.24-592.27" *)
  wire _093_;
  (* src = "gcd.v:592.24-592.27" *)
  wire _094_;
  (* src = "gcd.v:592.24-592.27" *)
  wire _095_;
  (* src = "gcd.v:592.24-592.27" *)
  wire _096_;
  (* src = "gcd.v:592.24-592.27" *)
  wire _097_;
  (* src = "gcd.v:592.24-592.27" *)
  wire _098_;
  (* src = "gcd.v:592.24-592.27" *)
  wire _099_;
  (* src = "gcd.v:592.24-592.27" *)
  wire _100_;
  (* src = "gcd.v:592.24-592.27" *)
  wire _101_;
  (* src = "gcd.v:592.24-592.27" *)
  wire _102_;
  (* src = "gcd.v:592.24-592.27" *)
  wire _103_;
  (* src = "gcd.v:592.24-592.27" *)
  wire _104_;
  (* src = "gcd.v:592.24-592.27" *)
  wire _105_;
  (* src = "gcd.v:592.24-592.27" *)
  wire _106_;
  (* src = "gcd.v:592.24-592.27" *)
  wire _107_;
  (* src = "gcd.v:592.24-592.27" *)
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  (* src = "gcd.v:593.24-593.27" *)
  wire _166_;
  (* src = "gcd.v:590.24-590.27" *)
  input clk;
  wire clk;
  (* src = "gcd.v:591.24-591.27" *)
  input [15:0] in0;
  wire [15:0] in0;
  (* src = "gcd.v:592.24-592.27" *)
  input [15:0] in1;
  wire [15:0] in1;
  (* src = "gcd.v:593.24-593.27" *)
  output out;
  wire out;
  (* src = "gcd.v:594.24-594.29" *)
  input reset;
  wire reset;
  sky130_fd_sc_hd__inv_1 _167_ (
    .A(_103_),
    .Y(_109_)
  );
  sky130_fd_sc_hd__lpflow_isobufsrc_1 _168_ (
    .A(_088_),
    .SLEEP(_104_),
    .X(_110_)
  );
  sky130_fd_sc_hd__xnor2_1 _169_ (
    .A(_090_),
    .B(_106_),
    .Y(_111_)
  );
  sky130_fd_sc_hd__xnor2_1 _170_ (
    .A(_089_),
    .B(_105_),
    .Y(_112_)
  );
  sky130_fd_sc_hd__nand2_1 _171_ (
    .A(_111_),
    .B(_112_),
    .Y(_113_)
  );
  sky130_fd_sc_hd__inv_2 _172_ (
    .A(_104_),
    .Y(_114_)
  );
  sky130_fd_sc_hd__o22ai_1 _173_ (
    .A1(_088_),
    .A2(_114_),
    .B1(_109_),
    .B2(_087_),
    .Y(_115_)
  );
  sky130_fd_sc_hd__a2111o_1 _174_ (
    .A1(_109_),
    .A2(_087_),
    .B1(_110_),
    .C1(_113_),
    .D1(_115_),
    .X(_116_)
  );
  sky130_fd_sc_hd__inv_1 _175_ (
    .A(_084_),
    .Y(_117_)
  );
  sky130_fd_sc_hd__nand2b_4 _176_ (
    .A_N(_093_),
    .B(_077_),
    .Y(_118_)
  );
  sky130_fd_sc_hd__maj3_2 _177_ (
    .A(_117_),
    .B(_100_),
    .C(_118_),
    .X(_119_)
  );
  sky130_fd_sc_hd__or2b_2 _178_ (
    .A(_102_),
    .B_N(_086_),
    .X(_120_)
  );
  sky130_fd_sc_hd__xnor2_4 _179_ (
    .A(_085_),
    .B(_101_),
    .Y(_121_)
  );
  sky130_fd_sc_hd__lpflow_isobufsrc_4 _180_ (
    .A(_086_),
    .SLEEP(_102_),
    .X(_122_)
  );
  sky130_fd_sc_hd__nor3b_1 _181_ (
    .A(_085_),
    .B(_122_),
    .C_N(_101_),
    .Y(_123_)
  );
  sky130_fd_sc_hd__lpflow_isobufsrc_2 _182_ (
    .A(_102_),
    .SLEEP(_086_),
    .X(_124_)
  );
  sky130_fd_sc_hd__a311oi_2 _183_ (
    .A1(_119_),
    .A2(_120_),
    .A3(_121_),
    .B1(_123_),
    .C1(_124_),
    .Y(_125_)
  );
  sky130_fd_sc_hd__nor2_1 _184_ (
    .A(_116_),
    .B(_125_),
    .Y(_126_)
  );
  sky130_fd_sc_hd__nor3b_1 _185_ (
    .A(_110_),
    .B(_113_),
    .C_N(_115_),
    .Y(_127_)
  );
  sky130_fd_sc_hd__inv_1 _186_ (
    .A(_090_),
    .Y(_128_)
  );
  sky130_fd_sc_hd__lpflow_isobufsrc_1 _187_ (
    .A(_105_),
    .SLEEP(_089_),
    .X(_129_)
  );
  sky130_fd_sc_hd__maj3_1 _188_ (
    .A(_128_),
    .B(_106_),
    .C(_129_),
    .X(_130_)
  );
  sky130_fd_sc_hd__inv_1 _189_ (
    .A(_080_),
    .Y(_131_)
  );
  sky130_fd_sc_hd__nand2b_1 _190_ (
    .A_N(_097_),
    .B(_081_),
    .Y(_132_)
  );
  sky130_fd_sc_hd__xor2_1 _191_ (
    .A(_082_),
    .B(_098_),
    .X(_133_)
  );
  sky130_fd_sc_hd__xor2_1 _192_ (
    .A(_099_),
    .B(_083_),
    .X(_134_)
  );
  sky130_fd_sc_hd__nor2_1 _193_ (
    .A(_133_),
    .B(_134_),
    .Y(_135_)
  );
  sky130_fd_sc_hd__inv_1 _194_ (
    .A(_081_),
    .Y(_136_)
  );
  sky130_fd_sc_hd__a22oi_1 _195_ (
    .A1(_136_),
    .A2(_097_),
    .B1(_096_),
    .B2(_131_),
    .Y(_137_)
  );
  sky130_fd_sc_hd__o2111ai_1 _196_ (
    .A1(_096_),
    .A2(_131_),
    .B1(_132_),
    .C1(_135_),
    .D1(_137_),
    .Y(_138_)
  );
  sky130_fd_sc_hd__inv_1 _197_ (
    .A(_079_),
    .Y(_139_)
  );
  sky130_fd_sc_hd__lpflow_isobufsrc_1 _198_ (
    .A(_094_),
    .SLEEP(_078_),
    .X(_140_)
  );
  sky130_fd_sc_hd__a21oi_1 _199_ (
    .A1(_139_),
    .A2(_095_),
    .B1(_140_),
    .Y(_141_)
  );
  sky130_fd_sc_hd__nand2b_1 _200_ (
    .A_N(_095_),
    .B(_079_),
    .Y(_142_)
  );
  sky130_fd_sc_hd__nand2b_1 _201_ (
    .A_N(_094_),
    .B(_078_),
    .Y(_143_)
  );
  sky130_fd_sc_hd__nand3_1 _202_ (
    .A(_141_),
    .B(_142_),
    .C(_143_),
    .Y(_144_)
  );
  sky130_fd_sc_hd__nand2b_1 _203_ (
    .A_N(_091_),
    .B(_107_),
    .Y(_145_)
  );
  sky130_fd_sc_hd__nand2b_1 _204_ (
    .A_N(_092_),
    .B(_108_),
    .Y(_146_)
  );
  sky130_fd_sc_hd__nand2b_1 _205_ (
    .A_N(_108_),
    .B(_092_),
    .Y(_147_)
  );
  sky130_fd_sc_hd__nand2b_1 _206_ (
    .A_N(_107_),
    .B(_091_),
    .Y(_148_)
  );
  sky130_fd_sc_hd__nand4_1 _207_ (
    .A(_145_),
    .B(_146_),
    .C(_147_),
    .D(_148_),
    .Y(_149_)
  );
  sky130_fd_sc_hd__nor3_1 _208_ (
    .A(_138_),
    .B(_144_),
    .C(_149_),
    .Y(_150_)
  );
  sky130_fd_sc_hd__o31ai_1 _209_ (
    .A1(_126_),
    .A2(_127_),
    .A3(_130_),
    .B1(_150_),
    .Y(_151_)
  );
  sky130_fd_sc_hd__nand2_1 _210_ (
    .A(_145_),
    .B(_146_),
    .Y(_152_)
  );
  sky130_fd_sc_hd__nor4bb_1 _211_ (
    .A(_138_),
    .B(_144_),
    .C_N(_152_),
    .D_N(_147_),
    .Y(_153_)
  );
  sky130_fd_sc_hd__nor3b_1 _212_ (
    .A(_138_),
    .B(_141_),
    .C_N(_142_),
    .Y(_154_)
  );
  sky130_fd_sc_hd__nand2_1 _213_ (
    .A(_132_),
    .B(_135_),
    .Y(_155_)
  );
  sky130_fd_sc_hd__inv_1 _214_ (
    .A(_099_),
    .Y(_156_)
  );
  sky130_fd_sc_hd__nand2b_1 _215_ (
    .A_N(_082_),
    .B(_098_),
    .Y(_157_)
  );
  sky130_fd_sc_hd__maj3_1 _216_ (
    .A(_156_),
    .B(_083_),
    .C(_157_),
    .X(_158_)
  );
  sky130_fd_sc_hd__o21ai_0 _217_ (
    .A1(_155_),
    .A2(_137_),
    .B1(_158_),
    .Y(_159_)
  );
  sky130_fd_sc_hd__nor3_1 _218_ (
    .A(_153_),
    .B(_154_),
    .C(_159_),
    .Y(_160_)
  );
  sky130_fd_sc_hd__xnor2_1 _219_ (
    .A(_084_),
    .B(_100_),
    .Y(_161_)
  );
  sky130_fd_sc_hd__nand2_1 _220_ (
    .A(_118_),
    .B(_161_),
    .Y(_162_)
  );
  sky130_fd_sc_hd__lpflow_isobufsrc_16 _221_ (
    .A(_093_),
    .SLEEP(_077_),
    .X(_163_)
  );
  sky130_fd_sc_hd__or4b_2 _222_ (
    .A(_122_),
    .B(_124_),
    .C(_163_),
    .D_N(_121_),
    .X(_164_)
  );
  sky130_fd_sc_hd__nor3_1 _223_ (
    .A(_116_),
    .B(_162_),
    .C(_164_),
    .Y(_165_)
  );
  sky130_fd_sc_hd__a22oi_1 _224_ (
    .A1(_151_),
    .A2(_160_),
    .B1(_165_),
    .B2(_150_),
    .Y(_166_)
  );
  assign _099_ = in1[15];
  assign _083_ = in0[15];
  assign _082_ = in0[14];
  assign _098_ = in1[14];
  assign _081_ = in0[13];
  assign _097_ = in1[13];
  assign _096_ = in1[12];
  assign _080_ = in0[12];
  assign _079_ = in0[11];
  assign _095_ = in1[11];
  assign _078_ = in0[10];
  assign _094_ = in1[10];
  assign _092_ = in0[9];
  assign _108_ = in1[9];
  assign _107_ = in1[8];
  assign _091_ = in0[8];
  assign _090_ = in0[7];
  assign _106_ = in1[7];
  assign _089_ = in0[6];
  assign _105_ = in1[6];
  assign _088_ = in0[5];
  assign _104_ = in1[5];
  assign _103_ = in1[4];
  assign _087_ = in0[4];
  assign _086_ = in0[3];
  assign _102_ = in1[3];
  assign _085_ = in0[2];
  assign _101_ = in1[2];
  assign _084_ = in0[1];
  assign _100_ = in1[1];
  assign _093_ = in1[0];
  assign _077_ = in0[0];
  assign out = _166_;
endmodule

(* src = "gcd.v:650.1-684.10" *)
module Mux_0x683fa1a418b072c9(clk, \in_$000 , \in_$001 , \in_$002 , out, reset, sel);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  (* src = "gcd.v:653.24-653.31" *)
  wire _051_;
  (* src = "gcd.v:653.24-653.31" *)
  wire _052_;
  (* src = "gcd.v:653.24-653.31" *)
  wire _053_;
  (* src = "gcd.v:653.24-653.31" *)
  wire _054_;
  (* src = "gcd.v:653.24-653.31" *)
  wire _055_;
  (* src = "gcd.v:653.24-653.31" *)
  wire _056_;
  (* src = "gcd.v:653.24-653.31" *)
  wire _057_;
  (* src = "gcd.v:653.24-653.31" *)
  wire _058_;
  (* src = "gcd.v:653.24-653.31" *)
  wire _059_;
  (* src = "gcd.v:653.24-653.31" *)
  wire _060_;
  (* src = "gcd.v:653.24-653.31" *)
  wire _061_;
  (* src = "gcd.v:653.24-653.31" *)
  wire _062_;
  (* src = "gcd.v:653.24-653.31" *)
  wire _063_;
  (* src = "gcd.v:653.24-653.31" *)
  wire _064_;
  (* src = "gcd.v:653.24-653.31" *)
  wire _065_;
  (* src = "gcd.v:653.24-653.31" *)
  wire _066_;
  (* src = "gcd.v:654.24-654.31" *)
  wire _067_;
  (* src = "gcd.v:654.24-654.31" *)
  wire _068_;
  (* src = "gcd.v:654.24-654.31" *)
  wire _069_;
  (* src = "gcd.v:654.24-654.31" *)
  wire _070_;
  (* src = "gcd.v:654.24-654.31" *)
  wire _071_;
  (* src = "gcd.v:654.24-654.31" *)
  wire _072_;
  (* src = "gcd.v:654.24-654.31" *)
  wire _073_;
  (* src = "gcd.v:654.24-654.31" *)
  wire _074_;
  (* src = "gcd.v:654.24-654.31" *)
  wire _075_;
  (* src = "gcd.v:654.24-654.31" *)
  wire _076_;
  (* src = "gcd.v:654.24-654.31" *)
  wire _077_;
  (* src = "gcd.v:654.24-654.31" *)
  wire _078_;
  (* src = "gcd.v:654.24-654.31" *)
  wire _079_;
  (* src = "gcd.v:654.24-654.31" *)
  wire _080_;
  (* src = "gcd.v:654.24-654.31" *)
  wire _081_;
  (* src = "gcd.v:654.24-654.31" *)
  wire _082_;
  (* src = "gcd.v:655.24-655.31" *)
  wire _083_;
  (* src = "gcd.v:655.24-655.31" *)
  wire _084_;
  (* src = "gcd.v:655.24-655.31" *)
  wire _085_;
  (* src = "gcd.v:655.24-655.31" *)
  wire _086_;
  (* src = "gcd.v:655.24-655.31" *)
  wire _087_;
  (* src = "gcd.v:655.24-655.31" *)
  wire _088_;
  (* src = "gcd.v:655.24-655.31" *)
  wire _089_;
  (* src = "gcd.v:655.24-655.31" *)
  wire _090_;
  (* src = "gcd.v:655.24-655.31" *)
  wire _091_;
  (* src = "gcd.v:655.24-655.31" *)
  wire _092_;
  (* src = "gcd.v:655.24-655.31" *)
  wire _093_;
  (* src = "gcd.v:655.24-655.31" *)
  wire _094_;
  (* src = "gcd.v:655.24-655.31" *)
  wire _095_;
  (* src = "gcd.v:655.24-655.31" *)
  wire _096_;
  (* src = "gcd.v:655.24-655.31" *)
  wire _097_;
  (* src = "gcd.v:655.24-655.31" *)
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  (* src = "gcd.v:656.24-656.27" *)
  wire _119_;
  (* src = "gcd.v:656.24-656.27" *)
  wire _120_;
  (* src = "gcd.v:656.24-656.27" *)
  wire _121_;
  (* src = "gcd.v:656.24-656.27" *)
  wire _122_;
  (* src = "gcd.v:656.24-656.27" *)
  wire _123_;
  (* src = "gcd.v:656.24-656.27" *)
  wire _124_;
  (* src = "gcd.v:656.24-656.27" *)
  wire _125_;
  (* src = "gcd.v:656.24-656.27" *)
  wire _126_;
  (* src = "gcd.v:656.24-656.27" *)
  wire _127_;
  (* src = "gcd.v:656.24-656.27" *)
  wire _128_;
  (* src = "gcd.v:656.24-656.27" *)
  wire _129_;
  (* src = "gcd.v:656.24-656.27" *)
  wire _130_;
  (* src = "gcd.v:656.24-656.27" *)
  wire _131_;
  (* src = "gcd.v:656.24-656.27" *)
  wire _132_;
  (* src = "gcd.v:656.24-656.27" *)
  wire _133_;
  (* src = "gcd.v:656.24-656.27" *)
  wire _134_;
  (* src = "gcd.v:658.24-658.27" *)
  wire _135_;
  (* src = "gcd.v:658.24-658.27" *)
  wire _136_;
  (* src = "gcd.v:652.24-652.27" *)
  input clk;
  wire clk;
  (* src = "gcd.v:653.24-653.31" *)
  input [15:0] \in_$000 ;
  wire [15:0] \in_$000 ;
  (* src = "gcd.v:654.24-654.31" *)
  input [15:0] \in_$001 ;
  wire [15:0] \in_$001 ;
  (* src = "gcd.v:655.24-655.31" *)
  input [15:0] \in_$002 ;
  wire [15:0] \in_$002 ;
  (* src = "gcd.v:666.19-666.22" *)
  wire [15:0] \in_[0] ;
  (* src = "gcd.v:666.19-666.22" *)
  wire [15:0] \in_[1] ;
  (* src = "gcd.v:666.19-666.22" *)
  wire [15:0] \in_[2] ;
  (* src = "gcd.v:656.24-656.27" *)
  output [15:0] out;
  wire [15:0] out;
  (* src = "gcd.v:657.24-657.29" *)
  input reset;
  wire reset;
  (* src = "gcd.v:658.24-658.27" *)
  input [1:0] sel;
  wire [1:0] sel;
  sky130_fd_sc_hd__lpflow_isobufsrc_4 _137_ (
    .A(_135_),
    .SLEEP(_136_),
    .X(_100_)
  );
  sky130_fd_sc_hd__buf_6 _138_ (
    .A(_100_),
    .X(_101_)
  );
  sky130_fd_sc_hd__xnor2_4 _139_ (
    .A(_135_),
    .B(_136_),
    .Y(_102_)
  );
  sky130_fd_sc_hd__buf_6 _140_ (
    .A(_102_),
    .X(_103_)
  );
  sky130_fd_sc_hd__and3b_1 _141_ (
    .A_N(_135_),
    .B(_136_),
    .C(_083_),
    .X(_104_)
  );
  sky130_fd_sc_hd__a221o_1 _142_ (
    .A1(_067_),
    .A2(_101_),
    .B1(_103_),
    .B2(_051_),
    .C1(_104_),
    .X(_119_)
  );
  sky130_fd_sc_hd__and3b_1 _143_ (
    .A_N(_135_),
    .B(_136_),
    .C(_090_),
    .X(_105_)
  );
  sky130_fd_sc_hd__a221o_1 _144_ (
    .A1(_074_),
    .A2(_101_),
    .B1(_103_),
    .B2(_058_),
    .C1(_105_),
    .X(_126_)
  );
  sky130_fd_sc_hd__and3b_1 _145_ (
    .A_N(_135_),
    .B(_136_),
    .C(_091_),
    .X(_106_)
  );
  sky130_fd_sc_hd__a221o_1 _146_ (
    .A1(_075_),
    .A2(_101_),
    .B1(_103_),
    .B2(_059_),
    .C1(_106_),
    .X(_127_)
  );
  sky130_fd_sc_hd__and3b_1 _147_ (
    .A_N(_135_),
    .B(_136_),
    .C(_092_),
    .X(_107_)
  );
  sky130_fd_sc_hd__a221o_1 _148_ (
    .A1(_076_),
    .A2(_101_),
    .B1(_103_),
    .B2(_060_),
    .C1(_107_),
    .X(_128_)
  );
  sky130_fd_sc_hd__and3b_1 _149_ (
    .A_N(_135_),
    .B(_136_),
    .C(_093_),
    .X(_108_)
  );
  sky130_fd_sc_hd__a221o_1 _150_ (
    .A1(_077_),
    .A2(_101_),
    .B1(_103_),
    .B2(_061_),
    .C1(_108_),
    .X(_129_)
  );
  sky130_fd_sc_hd__and3b_1 _151_ (
    .A_N(_135_),
    .B(_136_),
    .C(_094_),
    .X(_109_)
  );
  sky130_fd_sc_hd__a221o_1 _152_ (
    .A1(_078_),
    .A2(_101_),
    .B1(_103_),
    .B2(_062_),
    .C1(_109_),
    .X(_130_)
  );
  sky130_fd_sc_hd__and3b_1 _153_ (
    .A_N(_135_),
    .B(_136_),
    .C(_095_),
    .X(_110_)
  );
  sky130_fd_sc_hd__a221o_1 _154_ (
    .A1(_079_),
    .A2(_101_),
    .B1(_103_),
    .B2(_063_),
    .C1(_110_),
    .X(_131_)
  );
  sky130_fd_sc_hd__and3b_1 _155_ (
    .A_N(_135_),
    .B(_136_),
    .C(_096_),
    .X(_111_)
  );
  sky130_fd_sc_hd__a221o_1 _156_ (
    .A1(_080_),
    .A2(_101_),
    .B1(_103_),
    .B2(_064_),
    .C1(_111_),
    .X(_132_)
  );
  sky130_fd_sc_hd__and3b_1 _157_ (
    .A_N(_135_),
    .B(_136_),
    .C(_097_),
    .X(_112_)
  );
  sky130_fd_sc_hd__a221o_1 _158_ (
    .A1(_081_),
    .A2(_101_),
    .B1(_103_),
    .B2(_065_),
    .C1(_112_),
    .X(_133_)
  );
  sky130_fd_sc_hd__and3b_1 _159_ (
    .A_N(_135_),
    .B(_136_),
    .C(_098_),
    .X(_113_)
  );
  sky130_fd_sc_hd__a221o_1 _160_ (
    .A1(_082_),
    .A2(_101_),
    .B1(_103_),
    .B2(_066_),
    .C1(_113_),
    .X(_134_)
  );
  sky130_fd_sc_hd__and3b_1 _161_ (
    .A_N(_135_),
    .B(_136_),
    .C(_084_),
    .X(_114_)
  );
  sky130_fd_sc_hd__a221o_2 _162_ (
    .A1(_068_),
    .A2(_100_),
    .B1(_102_),
    .B2(_052_),
    .C1(_114_),
    .X(_120_)
  );
  sky130_fd_sc_hd__and3b_1 _163_ (
    .A_N(_135_),
    .B(_136_),
    .C(_085_),
    .X(_115_)
  );
  sky130_fd_sc_hd__a221o_2 _164_ (
    .A1(_069_),
    .A2(_100_),
    .B1(_102_),
    .B2(_053_),
    .C1(_115_),
    .X(_121_)
  );
  sky130_fd_sc_hd__and3b_1 _165_ (
    .A_N(_135_),
    .B(_136_),
    .C(_086_),
    .X(_116_)
  );
  sky130_fd_sc_hd__a221o_2 _166_ (
    .A1(_070_),
    .A2(_100_),
    .B1(_102_),
    .B2(_054_),
    .C1(_116_),
    .X(_122_)
  );
  sky130_fd_sc_hd__and3b_1 _167_ (
    .A_N(_135_),
    .B(_136_),
    .C(_087_),
    .X(_117_)
  );
  sky130_fd_sc_hd__a221o_2 _168_ (
    .A1(_071_),
    .A2(_100_),
    .B1(_102_),
    .B2(_055_),
    .C1(_117_),
    .X(_123_)
  );
  sky130_fd_sc_hd__and3b_1 _169_ (
    .A_N(_135_),
    .B(_136_),
    .C(_088_),
    .X(_118_)
  );
  sky130_fd_sc_hd__a221o_2 _170_ (
    .A1(_072_),
    .A2(_100_),
    .B1(_102_),
    .B2(_056_),
    .C1(_118_),
    .X(_124_)
  );
  sky130_fd_sc_hd__and3b_1 _171_ (
    .A_N(_135_),
    .B(_136_),
    .C(_089_),
    .X(_099_)
  );
  sky130_fd_sc_hd__a221o_2 _172_ (
    .A1(_073_),
    .A2(_100_),
    .B1(_102_),
    .B2(_057_),
    .C1(_099_),
    .X(_125_)
  );
  assign \in_[0]  = \in_$000 ;
  assign \in_[1]  = \in_$001 ;
  assign \in_[2]  = \in_$002 ;
  assign _135_ = sel[0];
  assign _136_ = sel[1];
  assign _083_ = \in_$002 [0];
  assign _067_ = \in_$001 [0];
  assign _051_ = \in_$000 [0];
  assign out[0] = _119_;
  assign _090_ = \in_$002 [1];
  assign _074_ = \in_$001 [1];
  assign _058_ = \in_$000 [1];
  assign out[1] = _126_;
  assign _091_ = \in_$002 [2];
  assign _075_ = \in_$001 [2];
  assign _059_ = \in_$000 [2];
  assign out[2] = _127_;
  assign _092_ = \in_$002 [3];
  assign _076_ = \in_$001 [3];
  assign _060_ = \in_$000 [3];
  assign out[3] = _128_;
  assign _093_ = \in_$002 [4];
  assign _077_ = \in_$001 [4];
  assign _061_ = \in_$000 [4];
  assign out[4] = _129_;
  assign _094_ = \in_$002 [5];
  assign _078_ = \in_$001 [5];
  assign _062_ = \in_$000 [5];
  assign out[5] = _130_;
  assign _095_ = \in_$002 [6];
  assign _079_ = \in_$001 [6];
  assign _063_ = \in_$000 [6];
  assign out[6] = _131_;
  assign _096_ = \in_$002 [7];
  assign _080_ = \in_$001 [7];
  assign _064_ = \in_$000 [7];
  assign out[7] = _132_;
  assign _097_ = \in_$002 [8];
  assign _081_ = \in_$001 [8];
  assign _065_ = \in_$000 [8];
  assign out[8] = _133_;
  assign _098_ = \in_$002 [9];
  assign _082_ = \in_$001 [9];
  assign _066_ = \in_$000 [9];
  assign out[9] = _134_;
  assign _084_ = \in_$002 [10];
  assign _068_ = \in_$001 [10];
  assign _052_ = \in_$000 [10];
  assign out[10] = _120_;
  assign _085_ = \in_$002 [11];
  assign _069_ = \in_$001 [11];
  assign _053_ = \in_$000 [11];
  assign out[11] = _121_;
  assign _086_ = \in_$002 [12];
  assign _070_ = \in_$001 [12];
  assign _054_ = \in_$000 [12];
  assign out[12] = _122_;
  assign _087_ = \in_$002 [13];
  assign _071_ = \in_$001 [13];
  assign _055_ = \in_$000 [13];
  assign out[13] = _123_;
  assign _088_ = \in_$002 [14];
  assign _072_ = \in_$001 [14];
  assign _056_ = \in_$000 [14];
  assign out[14] = _124_;
  assign _089_ = \in_$002 [15];
  assign _073_ = \in_$001 [15];
  assign _057_ = \in_$000 [15];
  assign out[15] = _125_;
endmodule

(* src = "gcd.v:693.1-725.10" *)
module Mux_0xdd6473406d1a99a(clk, \in_$000 , \in_$001 , out, reset, sel);
  (* src = "gcd.v:696.24-696.31" *)
  wire _00_;
  (* src = "gcd.v:696.24-696.31" *)
  wire _01_;
  (* src = "gcd.v:696.24-696.31" *)
  wire _02_;
  (* src = "gcd.v:696.24-696.31" *)
  wire _03_;
  (* src = "gcd.v:696.24-696.31" *)
  wire _04_;
  (* src = "gcd.v:696.24-696.31" *)
  wire _05_;
  (* src = "gcd.v:696.24-696.31" *)
  wire _06_;
  (* src = "gcd.v:696.24-696.31" *)
  wire _07_;
  (* src = "gcd.v:696.24-696.31" *)
  wire _08_;
  (* src = "gcd.v:696.24-696.31" *)
  wire _09_;
  (* src = "gcd.v:696.24-696.31" *)
  wire _10_;
  (* src = "gcd.v:696.24-696.31" *)
  wire _11_;
  (* src = "gcd.v:696.24-696.31" *)
  wire _12_;
  (* src = "gcd.v:696.24-696.31" *)
  wire _13_;
  (* src = "gcd.v:696.24-696.31" *)
  wire _14_;
  (* src = "gcd.v:696.24-696.31" *)
  wire _15_;
  (* src = "gcd.v:697.24-697.31" *)
  wire _16_;
  (* src = "gcd.v:697.24-697.31" *)
  wire _17_;
  (* src = "gcd.v:697.24-697.31" *)
  wire _18_;
  (* src = "gcd.v:697.24-697.31" *)
  wire _19_;
  (* src = "gcd.v:697.24-697.31" *)
  wire _20_;
  (* src = "gcd.v:697.24-697.31" *)
  wire _21_;
  (* src = "gcd.v:697.24-697.31" *)
  wire _22_;
  (* src = "gcd.v:697.24-697.31" *)
  wire _23_;
  (* src = "gcd.v:697.24-697.31" *)
  wire _24_;
  (* src = "gcd.v:697.24-697.31" *)
  wire _25_;
  (* src = "gcd.v:697.24-697.31" *)
  wire _26_;
  (* src = "gcd.v:697.24-697.31" *)
  wire _27_;
  (* src = "gcd.v:697.24-697.31" *)
  wire _28_;
  (* src = "gcd.v:697.24-697.31" *)
  wire _29_;
  (* src = "gcd.v:697.24-697.31" *)
  wire _30_;
  (* src = "gcd.v:697.24-697.31" *)
  wire _31_;
  (* src = "gcd.v:698.24-698.27" *)
  wire _32_;
  (* src = "gcd.v:698.24-698.27" *)
  wire _33_;
  (* src = "gcd.v:698.24-698.27" *)
  wire _34_;
  (* src = "gcd.v:698.24-698.27" *)
  wire _35_;
  (* src = "gcd.v:698.24-698.27" *)
  wire _36_;
  (* src = "gcd.v:698.24-698.27" *)
  wire _37_;
  (* src = "gcd.v:698.24-698.27" *)
  wire _38_;
  (* src = "gcd.v:698.24-698.27" *)
  wire _39_;
  (* src = "gcd.v:698.24-698.27" *)
  wire _40_;
  (* src = "gcd.v:698.24-698.27" *)
  wire _41_;
  (* src = "gcd.v:698.24-698.27" *)
  wire _42_;
  (* src = "gcd.v:698.24-698.27" *)
  wire _43_;
  (* src = "gcd.v:698.24-698.27" *)
  wire _44_;
  (* src = "gcd.v:698.24-698.27" *)
  wire _45_;
  (* src = "gcd.v:698.24-698.27" *)
  wire _46_;
  (* src = "gcd.v:698.24-698.27" *)
  wire _47_;
  (* src = "gcd.v:700.24-700.27" *)
  wire _48_;
  (* src = "gcd.v:695.24-695.27" *)
  input clk;
  wire clk;
  (* src = "gcd.v:696.24-696.31" *)
  input [15:0] \in_$000 ;
  wire [15:0] \in_$000 ;
  (* src = "gcd.v:697.24-697.31" *)
  input [15:0] \in_$001 ;
  wire [15:0] \in_$001 ;
  (* src = "gcd.v:708.19-708.22" *)
  wire [15:0] \in_[0] ;
  (* src = "gcd.v:708.19-708.22" *)
  wire [15:0] \in_[1] ;
  (* src = "gcd.v:698.24-698.27" *)
  output [15:0] out;
  wire [15:0] out;
  (* src = "gcd.v:699.24-699.29" *)
  input reset;
  wire reset;
  (* src = "gcd.v:700.24-700.27" *)
  input sel;
  wire sel;
  sky130_fd_sc_hd__mux2_1 _49_ (
    .A0(_00_),
    .A1(_16_),
    .S(_48_),
    .X(_32_)
  );
  sky130_fd_sc_hd__mux2_1 _50_ (
    .A0(_07_),
    .A1(_23_),
    .S(_48_),
    .X(_39_)
  );
  sky130_fd_sc_hd__mux2_1 _51_ (
    .A0(_08_),
    .A1(_24_),
    .S(_48_),
    .X(_40_)
  );
  sky130_fd_sc_hd__mux2_1 _52_ (
    .A0(_09_),
    .A1(_25_),
    .S(_48_),
    .X(_41_)
  );
  sky130_fd_sc_hd__mux2_1 _53_ (
    .A0(_10_),
    .A1(_26_),
    .S(_48_),
    .X(_42_)
  );
  sky130_fd_sc_hd__mux2_1 _54_ (
    .A0(_11_),
    .A1(_27_),
    .S(_48_),
    .X(_43_)
  );
  sky130_fd_sc_hd__mux2_1 _55_ (
    .A0(_12_),
    .A1(_28_),
    .S(_48_),
    .X(_44_)
  );
  sky130_fd_sc_hd__mux2_1 _56_ (
    .A0(_13_),
    .A1(_29_),
    .S(_48_),
    .X(_45_)
  );
  sky130_fd_sc_hd__mux2_1 _57_ (
    .A0(_14_),
    .A1(_30_),
    .S(_48_),
    .X(_46_)
  );
  sky130_fd_sc_hd__mux2_1 _58_ (
    .A0(_15_),
    .A1(_31_),
    .S(_48_),
    .X(_47_)
  );
  sky130_fd_sc_hd__mux2_1 _59_ (
    .A0(_01_),
    .A1(_17_),
    .S(_48_),
    .X(_33_)
  );
  sky130_fd_sc_hd__mux2_1 _60_ (
    .A0(_02_),
    .A1(_18_),
    .S(_48_),
    .X(_34_)
  );
  sky130_fd_sc_hd__mux2_1 _61_ (
    .A0(_03_),
    .A1(_19_),
    .S(_48_),
    .X(_35_)
  );
  sky130_fd_sc_hd__mux2_1 _62_ (
    .A0(_04_),
    .A1(_20_),
    .S(_48_),
    .X(_36_)
  );
  sky130_fd_sc_hd__mux2_1 _63_ (
    .A0(_05_),
    .A1(_21_),
    .S(_48_),
    .X(_37_)
  );
  sky130_fd_sc_hd__mux2_1 _64_ (
    .A0(_06_),
    .A1(_22_),
    .S(_48_),
    .X(_38_)
  );
  assign \in_[0]  = \in_$000 ;
  assign \in_[1]  = \in_$001 ;
  assign _00_ = \in_$000 [0];
  assign _16_ = \in_$001 [0];
  assign _48_ = sel;
  assign out[0] = _32_;
  assign _07_ = \in_$000 [1];
  assign _23_ = \in_$001 [1];
  assign out[1] = _39_;
  assign _08_ = \in_$000 [2];
  assign _24_ = \in_$001 [2];
  assign out[2] = _40_;
  assign _09_ = \in_$000 [3];
  assign _25_ = \in_$001 [3];
  assign out[3] = _41_;
  assign _10_ = \in_$000 [4];
  assign _26_ = \in_$001 [4];
  assign out[4] = _42_;
  assign _11_ = \in_$000 [5];
  assign _27_ = \in_$001 [5];
  assign out[5] = _43_;
  assign _12_ = \in_$000 [6];
  assign _28_ = \in_$001 [6];
  assign out[6] = _44_;
  assign _13_ = \in_$000 [7];
  assign _29_ = \in_$001 [7];
  assign out[7] = _45_;
  assign _14_ = \in_$000 [8];
  assign _30_ = \in_$001 [8];
  assign out[8] = _46_;
  assign _15_ = \in_$000 [9];
  assign _31_ = \in_$001 [9];
  assign out[9] = _47_;
  assign _01_ = \in_$000 [10];
  assign _17_ = \in_$001 [10];
  assign out[10] = _33_;
  assign _02_ = \in_$000 [11];
  assign _18_ = \in_$001 [11];
  assign out[11] = _34_;
  assign _03_ = \in_$000 [12];
  assign _19_ = \in_$001 [12];
  assign out[12] = _35_;
  assign _04_ = \in_$000 [13];
  assign _20_ = \in_$001 [13];
  assign out[13] = _36_;
  assign _05_ = \in_$000 [14];
  assign _21_ = \in_$001 [14];
  assign out[14] = _37_;
  assign _06_ = \in_$000 [15];
  assign _22_ = \in_$001 [15];
  assign out[15] = _38_;
endmodule

(* src = "gcd.v:552.1-580.10" *)
module RegEn_0x68db79c4ec1d6e5b(clk, en, in_, out, reset);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  (* src = "gcd.v:555.24-555.26" *)
  wire _16_;
  (* src = "gcd.v:556.24-556.27" *)
  wire _17_;
  (* src = "gcd.v:556.24-556.27" *)
  wire _18_;
  (* src = "gcd.v:556.24-556.27" *)
  wire _19_;
  (* src = "gcd.v:556.24-556.27" *)
  wire _20_;
  (* src = "gcd.v:556.24-556.27" *)
  wire _21_;
  (* src = "gcd.v:556.24-556.27" *)
  wire _22_;
  (* src = "gcd.v:556.24-556.27" *)
  wire _23_;
  (* src = "gcd.v:556.24-556.27" *)
  wire _24_;
  (* src = "gcd.v:556.24-556.27" *)
  wire _25_;
  (* src = "gcd.v:556.24-556.27" *)
  wire _26_;
  (* src = "gcd.v:556.24-556.27" *)
  wire _27_;
  (* src = "gcd.v:556.24-556.27" *)
  wire _28_;
  (* src = "gcd.v:556.24-556.27" *)
  wire _29_;
  (* src = "gcd.v:556.24-556.27" *)
  wire _30_;
  (* src = "gcd.v:556.24-556.27" *)
  wire _31_;
  (* src = "gcd.v:556.24-556.27" *)
  wire _32_;
  (* src = "gcd.v:557.24-557.27" *)
  wire _33_;
  (* src = "gcd.v:557.24-557.27" *)
  wire _34_;
  (* src = "gcd.v:557.24-557.27" *)
  wire _35_;
  (* src = "gcd.v:557.24-557.27" *)
  wire _36_;
  (* src = "gcd.v:557.24-557.27" *)
  wire _37_;
  (* src = "gcd.v:557.24-557.27" *)
  wire _38_;
  (* src = "gcd.v:557.24-557.27" *)
  wire _39_;
  (* src = "gcd.v:557.24-557.27" *)
  wire _40_;
  (* src = "gcd.v:557.24-557.27" *)
  wire _41_;
  (* src = "gcd.v:557.24-557.27" *)
  wire _42_;
  (* src = "gcd.v:557.24-557.27" *)
  wire _43_;
  (* src = "gcd.v:557.24-557.27" *)
  wire _44_;
  (* src = "gcd.v:557.24-557.27" *)
  wire _45_;
  (* src = "gcd.v:557.24-557.27" *)
  wire _46_;
  (* src = "gcd.v:557.24-557.27" *)
  wire _47_;
  (* src = "gcd.v:557.24-557.27" *)
  wire _48_;
  wire _49_;
  wire _50_;
  wire _51_;
  wire _52_;
  wire _53_;
  wire _54_;
  wire _55_;
  wire _56_;
  wire _57_;
  wire _58_;
  wire _59_;
  wire _60_;
  wire _61_;
  wire _62_;
  wire _63_;
  wire _64_;
  (* src = "gcd.v:554.24-554.27" *)
  input clk;
  wire clk;
  (* src = "gcd.v:555.24-555.26" *)
  input en;
  wire en;
  (* src = "gcd.v:556.24-556.27" *)
  input [15:0] in_;
  wire [15:0] in_;
  (* src = "gcd.v:557.24-557.27" *)
  output [15:0] out;
  wire [15:0] out;
  (* src = "gcd.v:558.24-558.29" *)
  input reset;
  wire reset;
  sky130_fd_sc_hd__mux2_1 _65_ (
    .A0(_33_),
    .A1(_17_),
    .S(_16_),
    .X(_00_)
  );
  sky130_fd_sc_hd__mux2_1 _66_ (
    .A0(_40_),
    .A1(_24_),
    .S(_16_),
    .X(_01_)
  );
  sky130_fd_sc_hd__mux2_1 _67_ (
    .A0(_41_),
    .A1(_25_),
    .S(_16_),
    .X(_02_)
  );
  sky130_fd_sc_hd__mux2_1 _68_ (
    .A0(_42_),
    .A1(_26_),
    .S(_16_),
    .X(_03_)
  );
  sky130_fd_sc_hd__mux2_1 _69_ (
    .A0(_43_),
    .A1(_27_),
    .S(_16_),
    .X(_04_)
  );
  sky130_fd_sc_hd__mux2_1 _70_ (
    .A0(_44_),
    .A1(_28_),
    .S(_16_),
    .X(_05_)
  );
  sky130_fd_sc_hd__mux2_1 _71_ (
    .A0(_45_),
    .A1(_29_),
    .S(_16_),
    .X(_06_)
  );
  sky130_fd_sc_hd__mux2_1 _72_ (
    .A0(_46_),
    .A1(_30_),
    .S(_16_),
    .X(_07_)
  );
  sky130_fd_sc_hd__mux2_1 _73_ (
    .A0(_47_),
    .A1(_31_),
    .S(_16_),
    .X(_08_)
  );
  sky130_fd_sc_hd__mux2_1 _74_ (
    .A0(_48_),
    .A1(_32_),
    .S(_16_),
    .X(_09_)
  );
  sky130_fd_sc_hd__mux2_1 _75_ (
    .A0(_34_),
    .A1(_18_),
    .S(_16_),
    .X(_10_)
  );
  sky130_fd_sc_hd__mux2_1 _76_ (
    .A0(_35_),
    .A1(_19_),
    .S(_16_),
    .X(_11_)
  );
  sky130_fd_sc_hd__mux2_1 _77_ (
    .A0(_36_),
    .A1(_20_),
    .S(_16_),
    .X(_12_)
  );
  sky130_fd_sc_hd__mux2_1 _78_ (
    .A0(_37_),
    .A1(_21_),
    .S(_16_),
    .X(_13_)
  );
  sky130_fd_sc_hd__mux2_1 _79_ (
    .A0(_38_),
    .A1(_22_),
    .S(_16_),
    .X(_14_)
  );
  sky130_fd_sc_hd__mux2_1 _80_ (
    .A0(_39_),
    .A1(_23_),
    .S(_16_),
    .X(_15_)
  );
  (* src = "gcd.v:571.3-577.6" *)
  sky130_fd_sc_hd__dfxtp_1 _81_ (
    .CLK(clk),
    .D(_49_),
    .Q(out[0])
  );
  (* src = "gcd.v:571.3-577.6" *)
  sky130_fd_sc_hd__dfxtp_1 _82_ (
    .CLK(clk),
    .D(_50_),
    .Q(out[1])
  );
  (* src = "gcd.v:571.3-577.6" *)
  sky130_fd_sc_hd__dfxtp_1 _83_ (
    .CLK(clk),
    .D(_51_),
    .Q(out[2])
  );
  (* src = "gcd.v:571.3-577.6" *)
  sky130_fd_sc_hd__dfxtp_1 _84_ (
    .CLK(clk),
    .D(_52_),
    .Q(out[3])
  );
  (* src = "gcd.v:571.3-577.6" *)
  sky130_fd_sc_hd__dfxtp_1 _85_ (
    .CLK(clk),
    .D(_53_),
    .Q(out[4])
  );
  (* src = "gcd.v:571.3-577.6" *)
  sky130_fd_sc_hd__dfxtp_1 _86_ (
    .CLK(clk),
    .D(_54_),
    .Q(out[5])
  );
  (* src = "gcd.v:571.3-577.6" *)
  sky130_fd_sc_hd__dfxtp_1 _87_ (
    .CLK(clk),
    .D(_55_),
    .Q(out[6])
  );
  (* src = "gcd.v:571.3-577.6" *)
  sky130_fd_sc_hd__dfxtp_1 _88_ (
    .CLK(clk),
    .D(_56_),
    .Q(out[7])
  );
  (* src = "gcd.v:571.3-577.6" *)
  sky130_fd_sc_hd__dfxtp_1 _89_ (
    .CLK(clk),
    .D(_57_),
    .Q(out[8])
  );
  (* src = "gcd.v:571.3-577.6" *)
  sky130_fd_sc_hd__dfxtp_1 _90_ (
    .CLK(clk),
    .D(_58_),
    .Q(out[9])
  );
  (* src = "gcd.v:571.3-577.6" *)
  sky130_fd_sc_hd__dfxtp_1 _91_ (
    .CLK(clk),
    .D(_59_),
    .Q(out[10])
  );
  (* src = "gcd.v:571.3-577.6" *)
  sky130_fd_sc_hd__dfxtp_1 _92_ (
    .CLK(clk),
    .D(_60_),
    .Q(out[11])
  );
  (* src = "gcd.v:571.3-577.6" *)
  sky130_fd_sc_hd__dfxtp_1 _93_ (
    .CLK(clk),
    .D(_61_),
    .Q(out[12])
  );
  (* src = "gcd.v:571.3-577.6" *)
  sky130_fd_sc_hd__dfxtp_1 _94_ (
    .CLK(clk),
    .D(_62_),
    .Q(out[13])
  );
  (* src = "gcd.v:571.3-577.6" *)
  sky130_fd_sc_hd__dfxtp_1 _95_ (
    .CLK(clk),
    .D(_63_),
    .Q(out[14])
  );
  (* src = "gcd.v:571.3-577.6" *)
  sky130_fd_sc_hd__dfxtp_1 _96_ (
    .CLK(clk),
    .D(_64_),
    .Q(out[15])
  );
  assign _33_ = out[0];
  assign _17_ = in_[0];
  assign _16_ = en;
  assign _49_ = _00_;
  assign _40_ = out[1];
  assign _24_ = in_[1];
  assign _50_ = _01_;
  assign _41_ = out[2];
  assign _25_ = in_[2];
  assign _51_ = _02_;
  assign _42_ = out[3];
  assign _26_ = in_[3];
  assign _52_ = _03_;
  assign _43_ = out[4];
  assign _27_ = in_[4];
  assign _53_ = _04_;
  assign _44_ = out[5];
  assign _28_ = in_[5];
  assign _54_ = _05_;
  assign _45_ = out[6];
  assign _29_ = in_[6];
  assign _55_ = _06_;
  assign _46_ = out[7];
  assign _30_ = in_[7];
  assign _56_ = _07_;
  assign _47_ = out[8];
  assign _31_ = in_[8];
  assign _57_ = _08_;
  assign _48_ = out[9];
  assign _32_ = in_[9];
  assign _58_ = _09_;
  assign _34_ = out[10];
  assign _18_ = in_[10];
  assign _59_ = _10_;
  assign _35_ = out[11];
  assign _19_ = in_[11];
  assign _60_ = _11_;
  assign _36_ = out[12];
  assign _20_ = in_[12];
  assign _61_ = _12_;
  assign _37_ = out[13];
  assign _21_ = in_[13];
  assign _62_ = _13_;
  assign _38_ = out[14];
  assign _22_ = in_[14];
  assign _63_ = _14_;
  assign _39_ = out[15];
  assign _23_ = in_[15];
  assign _64_ = _15_;
endmodule

(* src = "gcd.v:329.1-362.10" *)
module RegRst_0x9f365fdf6c8998a(clk, in_, out, reset);
  wire _00_;
  wire _01_;
  (* src = "gcd.v:332.24-332.27" *)
  wire _02_;
  (* src = "gcd.v:332.24-332.27" *)
  wire _03_;
  (* src = "gcd.v:334.24-334.29" *)
  wire _04_;
  wire _05_;
  wire _06_;
  (* src = "gcd.v:331.24-331.27" *)
  input clk;
  wire clk;
  (* src = "gcd.v:332.24-332.27" *)
  input [1:0] in_;
  wire [1:0] in_;
  (* src = "gcd.v:333.24-333.27" *)
  output [1:0] out;
  wire [1:0] out;
  (* src = "gcd.v:334.24-334.29" *)
  input reset;
  wire reset;
  sky130_fd_sc_hd__lpflow_isobufsrc_1 _07_ (
    .A(_02_),
    .SLEEP(_04_),
    .X(_00_)
  );
  sky130_fd_sc_hd__lpflow_isobufsrc_1 _08_ (
    .A(_03_),
    .SLEEP(_04_),
    .X(_01_)
  );
  (* src = "gcd.v:352.3-359.6" *)
  sky130_fd_sc_hd__dfxtp_1 _09_ (
    .CLK(clk),
    .D(_05_),
    .Q(out[0])
  );
  (* src = "gcd.v:352.3-359.6" *)
  sky130_fd_sc_hd__dfxtp_1 _10_ (
    .CLK(clk),
    .D(_06_),
    .Q(out[1])
  );
  assign _02_ = in_[0];
  assign _04_ = reset;
  assign _05_ = _00_;
  assign _03_ = in_[1];
  assign _06_ = _01_;
endmodule

(* src = "gcd.v:733.1-756.10" *)
module Subtractor_0x422b1f52edd46a85(clk, in0, in1, out, reset);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  (* src = "gcd.v:736.24-736.27" *)
  wire _082_;
  (* src = "gcd.v:736.24-736.27" *)
  wire _083_;
  (* src = "gcd.v:736.24-736.27" *)
  wire _084_;
  (* src = "gcd.v:736.24-736.27" *)
  wire _085_;
  (* src = "gcd.v:736.24-736.27" *)
  wire _086_;
  (* src = "gcd.v:736.24-736.27" *)
  wire _087_;
  (* src = "gcd.v:736.24-736.27" *)
  wire _088_;
  (* src = "gcd.v:736.24-736.27" *)
  wire _089_;
  (* src = "gcd.v:736.24-736.27" *)
  wire _090_;
  (* src = "gcd.v:736.24-736.27" *)
  wire _091_;
  (* src = "gcd.v:736.24-736.27" *)
  wire _092_;
  (* src = "gcd.v:736.24-736.27" *)
  wire _093_;
  (* src = "gcd.v:736.24-736.27" *)
  wire _094_;
  (* src = "gcd.v:736.24-736.27" *)
  wire _095_;
  (* src = "gcd.v:736.24-736.27" *)
  wire _096_;
  (* src = "gcd.v:736.24-736.27" *)
  wire _097_;
  (* src = "gcd.v:737.24-737.27" *)
  wire _098_;
  (* src = "gcd.v:737.24-737.27" *)
  wire _099_;
  (* src = "gcd.v:737.24-737.27" *)
  wire _100_;
  (* src = "gcd.v:737.24-737.27" *)
  wire _101_;
  (* src = "gcd.v:737.24-737.27" *)
  wire _102_;
  (* src = "gcd.v:737.24-737.27" *)
  wire _103_;
  (* src = "gcd.v:737.24-737.27" *)
  wire _104_;
  (* src = "gcd.v:737.24-737.27" *)
  wire _105_;
  (* src = "gcd.v:737.24-737.27" *)
  wire _106_;
  (* src = "gcd.v:737.24-737.27" *)
  wire _107_;
  (* src = "gcd.v:737.24-737.27" *)
  wire _108_;
  (* src = "gcd.v:737.24-737.27" *)
  wire _109_;
  (* src = "gcd.v:737.24-737.27" *)
  wire _110_;
  (* src = "gcd.v:737.24-737.27" *)
  wire _111_;
  (* src = "gcd.v:737.24-737.27" *)
  wire _112_;
  (* src = "gcd.v:737.24-737.27" *)
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  (* src = "gcd.v:738.24-738.27" *)
  wire _172_;
  (* src = "gcd.v:738.24-738.27" *)
  wire _173_;
  (* src = "gcd.v:738.24-738.27" *)
  wire _174_;
  (* src = "gcd.v:738.24-738.27" *)
  wire _175_;
  (* src = "gcd.v:738.24-738.27" *)
  wire _176_;
  (* src = "gcd.v:738.24-738.27" *)
  wire _177_;
  (* src = "gcd.v:738.24-738.27" *)
  wire _178_;
  (* src = "gcd.v:738.24-738.27" *)
  wire _179_;
  (* src = "gcd.v:738.24-738.27" *)
  wire _180_;
  (* src = "gcd.v:738.24-738.27" *)
  wire _181_;
  (* src = "gcd.v:738.24-738.27" *)
  wire _182_;
  (* src = "gcd.v:738.24-738.27" *)
  wire _183_;
  (* src = "gcd.v:738.24-738.27" *)
  wire _184_;
  (* src = "gcd.v:738.24-738.27" *)
  wire _185_;
  (* src = "gcd.v:738.24-738.27" *)
  wire _186_;
  (* src = "gcd.v:738.24-738.27" *)
  wire _187_;
  (* src = "gcd.v:735.24-735.27" *)
  input clk;
  wire clk;
  (* src = "gcd.v:736.24-736.27" *)
  input [15:0] in0;
  wire [15:0] in0;
  (* src = "gcd.v:737.24-737.27" *)
  input [15:0] in1;
  wire [15:0] in1;
  (* src = "gcd.v:738.24-738.27" *)
  output [15:0] out;
  wire [15:0] out;
  (* src = "gcd.v:739.24-739.29" *)
  input reset;
  wire reset;
  sky130_fd_sc_hd__xor2_1 _188_ (
    .A(_082_),
    .B(_098_),
    .X(_172_)
  );
  sky130_fd_sc_hd__lpflow_isobufsrc_4 _189_ (
    .A(_098_),
    .SLEEP(_082_),
    .X(_131_)
  );
  sky130_fd_sc_hd__xnor2_1 _190_ (
    .A(_089_),
    .B(_105_),
    .Y(_132_)
  );
  sky130_fd_sc_hd__xnor2_1 _191_ (
    .A(_131_),
    .B(_132_),
    .Y(_179_)
  );
  sky130_fd_sc_hd__inv_1 _192_ (
    .A(_089_),
    .Y(_133_)
  );
  sky130_fd_sc_hd__maj3_2 _193_ (
    .A(_133_),
    .B(_105_),
    .C(_131_),
    .X(_134_)
  );
  sky130_fd_sc_hd__xnor2_1 _194_ (
    .A(_090_),
    .B(_106_),
    .Y(_135_)
  );
  sky130_fd_sc_hd__xnor2_1 _195_ (
    .A(_134_),
    .B(_135_),
    .Y(_180_)
  );
  sky130_fd_sc_hd__inv_1 _196_ (
    .A(_135_),
    .Y(_136_)
  );
  sky130_fd_sc_hd__nand2b_1 _197_ (
    .A_N(_106_),
    .B(_090_),
    .Y(_137_)
  );
  sky130_fd_sc_hd__o21a_1 _198_ (
    .A1(_134_),
    .A2(_136_),
    .B1(_137_),
    .X(_138_)
  );
  sky130_fd_sc_hd__xnor2_1 _199_ (
    .A(_091_),
    .B(_107_),
    .Y(_139_)
  );
  sky130_fd_sc_hd__xnor2_1 _200_ (
    .A(_138_),
    .B(_139_),
    .Y(_181_)
  );
  sky130_fd_sc_hd__inv_1 _201_ (
    .A(_091_),
    .Y(_140_)
  );
  sky130_fd_sc_hd__nand2_1 _202_ (
    .A(_140_),
    .B(_107_),
    .Y(_141_)
  );
  sky130_fd_sc_hd__nand2b_1 _203_ (
    .A_N(_092_),
    .B(_108_),
    .Y(_142_)
  );
  sky130_fd_sc_hd__lpflow_isobufsrc_1 _204_ (
    .A(_092_),
    .SLEEP(_108_),
    .X(_143_)
  );
  sky130_fd_sc_hd__lpflow_isobufsrc_1 _205_ (
    .A(_142_),
    .SLEEP(_143_),
    .X(_144_)
  );
  sky130_fd_sc_hd__o221ai_4 _206_ (
    .A1(_140_),
    .A2(_107_),
    .B1(_134_),
    .B2(_136_),
    .C1(_137_),
    .Y(_145_)
  );
  sky130_fd_sc_hd__nand3_1 _207_ (
    .A(_141_),
    .B(_144_),
    .C(_145_),
    .Y(_146_)
  );
  sky130_fd_sc_hd__a21oi_1 _208_ (
    .A1(_141_),
    .A2(_145_),
    .B1(_144_),
    .Y(_147_)
  );
  sky130_fd_sc_hd__lpflow_isobufsrc_1 _209_ (
    .A(_146_),
    .SLEEP(_147_),
    .X(_182_)
  );
  sky130_fd_sc_hd__a31oi_2 _210_ (
    .A1(_141_),
    .A2(_142_),
    .A3(_145_),
    .B1(_143_),
    .Y(_148_)
  );
  sky130_fd_sc_hd__xnor2_1 _211_ (
    .A(_093_),
    .B(_109_),
    .Y(_149_)
  );
  sky130_fd_sc_hd__xnor2_1 _212_ (
    .A(_148_),
    .B(_149_),
    .Y(_183_)
  );
  sky130_fd_sc_hd__inv_1 _213_ (
    .A(_093_),
    .Y(_150_)
  );
  sky130_fd_sc_hd__maj3_2 _214_ (
    .A(_150_),
    .B(_109_),
    .C(_148_),
    .X(_151_)
  );
  sky130_fd_sc_hd__xor2_1 _215_ (
    .A(_094_),
    .B(_110_),
    .X(_152_)
  );
  sky130_fd_sc_hd__xor2_1 _216_ (
    .A(_151_),
    .B(_152_),
    .X(_184_)
  );
  sky130_fd_sc_hd__nand2b_1 _217_ (
    .A_N(_110_),
    .B(_094_),
    .Y(_153_)
  );
  sky130_fd_sc_hd__o21ai_0 _218_ (
    .A1(_151_),
    .A2(_152_),
    .B1(_153_),
    .Y(_154_)
  );
  sky130_fd_sc_hd__xor2_1 _219_ (
    .A(_095_),
    .B(_111_),
    .X(_155_)
  );
  sky130_fd_sc_hd__xnor2_1 _220_ (
    .A(_154_),
    .B(_155_),
    .Y(_185_)
  );
  sky130_fd_sc_hd__inv_1 _221_ (
    .A(_095_),
    .Y(_156_)
  );
  sky130_fd_sc_hd__nand2_1 _222_ (
    .A(_156_),
    .B(_111_),
    .Y(_157_)
  );
  sky130_fd_sc_hd__xnor2_1 _223_ (
    .A(_096_),
    .B(_112_),
    .Y(_158_)
  );
  sky130_fd_sc_hd__o221ai_2 _224_ (
    .A1(_156_),
    .A2(_111_),
    .B1(_151_),
    .B2(_152_),
    .C1(_153_),
    .Y(_159_)
  );
  sky130_fd_sc_hd__nand3_1 _225_ (
    .A(_157_),
    .B(_158_),
    .C(_159_),
    .Y(_160_)
  );
  sky130_fd_sc_hd__a21oi_1 _226_ (
    .A1(_157_),
    .A2(_159_),
    .B1(_158_),
    .Y(_161_)
  );
  sky130_fd_sc_hd__lpflow_isobufsrc_1 _227_ (
    .A(_160_),
    .SLEEP(_161_),
    .X(_186_)
  );
  sky130_fd_sc_hd__lpflow_isobufsrc_1 _228_ (
    .A(_096_),
    .SLEEP(_112_),
    .X(_162_)
  );
  sky130_fd_sc_hd__a31oi_1 _229_ (
    .A1(_157_),
    .A2(_158_),
    .A3(_159_),
    .B1(_162_),
    .Y(_163_)
  );
  sky130_fd_sc_hd__lpflow_isobufsrc_1 _230_ (
    .A(_113_),
    .SLEEP(_097_),
    .X(_164_)
  );
  sky130_fd_sc_hd__lpflow_isobufsrc_1 _231_ (
    .A(_097_),
    .SLEEP(_113_),
    .X(_165_)
  );
  sky130_fd_sc_hd__nor2_1 _232_ (
    .A(_164_),
    .B(_165_),
    .Y(_166_)
  );
  sky130_fd_sc_hd__xnor2_1 _233_ (
    .A(_163_),
    .B(_166_),
    .Y(_187_)
  );
  sky130_fd_sc_hd__lpflow_isobufsrc_1 _234_ (
    .A(_099_),
    .SLEEP(_083_),
    .X(_167_)
  );
  sky130_fd_sc_hd__nand2b_1 _235_ (
    .A_N(_099_),
    .B(_083_),
    .Y(_168_)
  );
  sky130_fd_sc_hd__nor2b_1 _236_ (
    .A(_167_),
    .B_N(_168_),
    .Y(_169_)
  );
  sky130_fd_sc_hd__a311oi_1 _237_ (
    .A1(_157_),
    .A2(_158_),
    .A3(_159_),
    .B1(_165_),
    .C1(_162_),
    .Y(_170_)
  );
  sky130_fd_sc_hd__or2_2 _238_ (
    .A(_164_),
    .B(_170_),
    .X(_171_)
  );
  sky130_fd_sc_hd__xnor2_1 _239_ (
    .A(_169_),
    .B(_171_),
    .Y(_173_)
  );
  sky130_fd_sc_hd__o21ai_0 _240_ (
    .A1(_167_),
    .A2(_171_),
    .B1(_168_),
    .Y(_114_)
  );
  sky130_fd_sc_hd__nand2b_1 _241_ (
    .A_N(_084_),
    .B(_100_),
    .Y(_115_)
  );
  sky130_fd_sc_hd__nand2b_1 _242_ (
    .A_N(_100_),
    .B(_084_),
    .Y(_116_)
  );
  sky130_fd_sc_hd__lpflow_inputiso0n_1 _243_ (
    .A(_115_),
    .SLEEP_B(_116_),
    .X(_117_)
  );
  sky130_fd_sc_hd__xor2_1 _244_ (
    .A(_114_),
    .B(_117_),
    .X(_174_)
  );
  sky130_fd_sc_hd__xnor2_1 _245_ (
    .A(_085_),
    .B(_101_),
    .Y(_118_)
  );
  sky130_fd_sc_hd__o311ai_2 _246_ (
    .A1(_164_),
    .A2(_167_),
    .A3(_170_),
    .B1(_116_),
    .C1(_168_),
    .Y(_119_)
  );
  sky130_fd_sc_hd__nand3_1 _247_ (
    .A(_115_),
    .B(_118_),
    .C(_119_),
    .Y(_120_)
  );
  sky130_fd_sc_hd__a21oi_1 _248_ (
    .A1(_115_),
    .A2(_119_),
    .B1(_118_),
    .Y(_121_)
  );
  sky130_fd_sc_hd__lpflow_isobufsrc_1 _249_ (
    .A(_120_),
    .SLEEP(_121_),
    .X(_175_)
  );
  sky130_fd_sc_hd__lpflow_isobufsrc_1 _250_ (
    .A(_085_),
    .SLEEP(_101_),
    .X(_122_)
  );
  sky130_fd_sc_hd__a31oi_1 _251_ (
    .A1(_115_),
    .A2(_118_),
    .A3(_119_),
    .B1(_122_),
    .Y(_123_)
  );
  sky130_fd_sc_hd__xnor2_1 _252_ (
    .A(_086_),
    .B(_102_),
    .Y(_124_)
  );
  sky130_fd_sc_hd__xnor2_1 _253_ (
    .A(_123_),
    .B(_124_),
    .Y(_176_)
  );
  sky130_fd_sc_hd__inv_1 _254_ (
    .A(_086_),
    .Y(_125_)
  );
  sky130_fd_sc_hd__maj3_2 _255_ (
    .A(_125_),
    .B(_102_),
    .C(_123_),
    .X(_126_)
  );
  sky130_fd_sc_hd__xnor2_1 _256_ (
    .A(_087_),
    .B(_103_),
    .Y(_127_)
  );
  sky130_fd_sc_hd__xnor2_1 _257_ (
    .A(_126_),
    .B(_127_),
    .Y(_177_)
  );
  sky130_fd_sc_hd__inv_1 _258_ (
    .A(_087_),
    .Y(_128_)
  );
  sky130_fd_sc_hd__maj3_2 _259_ (
    .A(_128_),
    .B(_103_),
    .C(_126_),
    .X(_129_)
  );
  sky130_fd_sc_hd__xnor2_1 _260_ (
    .A(_088_),
    .B(_104_),
    .Y(_130_)
  );
  sky130_fd_sc_hd__xnor2_1 _261_ (
    .A(_129_),
    .B(_130_),
    .Y(_178_)
  );
  assign _082_ = in0[0];
  assign _098_ = in1[0];
  assign out[0] = _172_;
  assign _089_ = in0[1];
  assign _105_ = in1[1];
  assign out[1] = _179_;
  assign _090_ = in0[2];
  assign _106_ = in1[2];
  assign out[2] = _180_;
  assign _091_ = in0[3];
  assign _107_ = in1[3];
  assign out[3] = _181_;
  assign _092_ = in0[4];
  assign _108_ = in1[4];
  assign out[4] = _182_;
  assign _093_ = in0[5];
  assign _109_ = in1[5];
  assign out[5] = _183_;
  assign _094_ = in0[6];
  assign _110_ = in1[6];
  assign out[6] = _184_;
  assign _095_ = in0[7];
  assign _111_ = in1[7];
  assign out[7] = _185_;
  assign _096_ = in0[8];
  assign _112_ = in1[8];
  assign out[8] = _186_;
  assign _097_ = in0[9];
  assign _113_ = in1[9];
  assign out[9] = _187_;
  assign _083_ = in0[10];
  assign _099_ = in1[10];
  assign out[10] = _173_;
  assign _084_ = in0[11];
  assign _100_ = in1[11];
  assign out[11] = _174_;
  assign _085_ = in0[12];
  assign _101_ = in1[12];
  assign out[12] = _175_;
  assign _086_ = in0[13];
  assign _102_ = in1[13];
  assign out[13] = _176_;
  assign _087_ = in0[14];
  assign _103_ = in1[14];
  assign out[14] = _177_;
  assign _088_ = in0[15];
  assign _104_ = in1[15];
  assign out[15] = _178_;
endmodule

(* src = "gcd.v:619.1-641.10" *)
module ZeroComparator_0x422b1f52edd46a85(clk, in_, out, reset);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  (* src = "gcd.v:622.24-622.27" *)
  wire _14_;
  (* src = "gcd.v:622.24-622.27" *)
  wire _15_;
  (* src = "gcd.v:622.24-622.27" *)
  wire _16_;
  (* src = "gcd.v:622.24-622.27" *)
  wire _17_;
  (* src = "gcd.v:622.24-622.27" *)
  wire _18_;
  (* src = "gcd.v:622.24-622.27" *)
  wire _19_;
  (* src = "gcd.v:622.24-622.27" *)
  wire _20_;
  (* src = "gcd.v:622.24-622.27" *)
  wire _21_;
  (* src = "gcd.v:622.24-622.27" *)
  wire _22_;
  (* src = "gcd.v:622.24-622.27" *)
  wire _23_;
  (* src = "gcd.v:622.24-622.27" *)
  wire _24_;
  (* src = "gcd.v:622.24-622.27" *)
  wire _25_;
  (* src = "gcd.v:622.24-622.27" *)
  wire _26_;
  (* src = "gcd.v:622.24-622.27" *)
  wire _27_;
  (* src = "gcd.v:622.24-622.27" *)
  wire _28_;
  (* src = "gcd.v:622.24-622.27" *)
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire _34_;
  (* src = "gcd.v:623.24-623.27" *)
  wire _35_;
  (* src = "gcd.v:621.24-621.27" *)
  input clk;
  wire clk;
  (* src = "gcd.v:622.24-622.27" *)
  input [15:0] in_;
  wire [15:0] in_;
  (* src = "gcd.v:623.24-623.27" *)
  output out;
  wire out;
  (* src = "gcd.v:624.24-624.29" *)
  input reset;
  wire reset;
  sky130_fd_sc_hd__nor3_2 _36_ (
    .A(_21_),
    .B(_22_),
    .C(_18_),
    .Y(_30_)
  );
  sky130_fd_sc_hd__nor3_1 _37_ (
    .A(_28_),
    .B(_16_),
    .C(_19_),
    .Y(_31_)
  );
  sky130_fd_sc_hd__nor4_2 _38_ (
    .A(_24_),
    .B(_27_),
    .C(_29_),
    .D(_15_),
    .Y(_32_)
  );
  sky130_fd_sc_hd__nor4_4 _39_ (
    .A(_14_),
    .B(_25_),
    .C(_26_),
    .D(_20_),
    .Y(_33_)
  );
  sky130_fd_sc_hd__nand4_1 _40_ (
    .A(_30_),
    .B(_31_),
    .C(_32_),
    .D(_33_),
    .Y(_34_)
  );
  sky130_fd_sc_hd__nor3_1 _41_ (
    .A(_23_),
    .B(_17_),
    .C(_34_),
    .Y(_35_)
  );
  assign _21_ = in_[1];
  assign _14_ = in_[0];
  assign _23_ = in_[3];
  assign _22_ = in_[2];
  assign _25_ = in_[5];
  assign _24_ = in_[4];
  assign _27_ = in_[7];
  assign _26_ = in_[6];
  assign _29_ = in_[9];
  assign _28_ = in_[8];
  assign _16_ = in_[11];
  assign _15_ = in_[10];
  assign _18_ = in_[13];
  assign _17_ = in_[12];
  assign _20_ = in_[15];
  assign _19_ = in_[14];
  assign out = _35_;
endmodule

(* top =  1  *)
(* src = "gcd.v:11.1-102.10" *)
module gcd(clk, req_msg, req_rdy, req_val, reset, resp_msg, resp_rdy, resp_val);
  (* src = "gcd.v:13.15-13.18" *)
  input clk;
  wire clk;
  (* src = "gcd.v:30.19-30.33" *)
  wire [1:0] \ctrl$a_mux_sel ;
  (* src = "gcd.v:34.19-34.32" *)
  wire \ctrl$a_reg_en ;
  (* src = "gcd.v:32.19-32.33" *)
  wire \ctrl$b_mux_sel ;
  (* src = "gcd.v:33.19-33.32" *)
  wire \ctrl$b_reg_en ;
  (* src = "gcd.v:26.19-26.27" *)
  wire \ctrl$clk ;
  (* src = "gcd.v:27.19-27.33" *)
  wire \ctrl$is_a_lt_b ;
  (* src = "gcd.v:24.19-24.33" *)
  wire \ctrl$is_b_zero ;
  (* src = "gcd.v:35.19-35.31" *)
  wire \ctrl$req_rdy ;
  (* src = "gcd.v:28.19-28.31" *)
  wire \ctrl$req_val ;
  (* src = "gcd.v:29.19-29.29" *)
  wire \ctrl$reset ;
  (* src = "gcd.v:25.19-25.32" *)
  wire \ctrl$resp_rdy ;
  (* src = "gcd.v:31.19-31.32" *)
  wire \ctrl$resp_val ;
  (* src = "gcd.v:54.19-54.34" *)
  wire [1:0] \dpath$a_mux_sel ;
  (* src = "gcd.v:61.19-61.33" *)
  wire \dpath$a_reg_en ;
  (* src = "gcd.v:58.19-58.34" *)
  wire \dpath$b_mux_sel ;
  (* src = "gcd.v:60.19-60.33" *)
  wire \dpath$b_reg_en ;
  (* src = "gcd.v:55.19-55.28" *)
  wire \dpath$clk ;
  (* src = "gcd.v:64.19-64.34" *)
  wire \dpath$is_a_lt_b ;
  (* src = "gcd.v:62.19-62.34" *)
  wire \dpath$is_b_zero ;
  (* src = "gcd.v:57.19-57.34" *)
  wire [15:0] \dpath$req_msg_a ;
  (* src = "gcd.v:56.19-56.34" *)
  wire [15:0] \dpath$req_msg_b ;
  (* src = "gcd.v:59.19-59.30" *)
  wire \dpath$reset ;
  (* src = "gcd.v:63.19-63.33" *)
  wire [15:0] \dpath$resp_msg ;
  (* src = "gcd.v:14.24-14.31" *)
  input [31:0] req_msg;
  wire [31:0] req_msg;
  (* src = "gcd.v:15.15-15.22" *)
  output req_rdy;
  wire req_rdy;
  (* src = "gcd.v:16.15-16.22" *)
  input req_val;
  wire req_val;
  (* src = "gcd.v:17.15-17.20" *)
  input reset;
  wire reset;
  (* src = "gcd.v:18.24-18.32" *)
  output [15:0] resp_msg;
  wire [15:0] resp_msg;
  (* src = "gcd.v:19.15-19.23" *)
  input resp_rdy;
  wire resp_rdy;
  (* src = "gcd.v:20.15-20.23" *)
  output resp_val;
  wire resp_val;
  (* module_not_derived = 32'd1 *)
  (* src = "gcd.v:37.37-51.4" *)
  GcdUnitCtrlRTL_0x4d0fc71ead8d3d9e ctrl (
    .a_mux_sel(\ctrl$a_mux_sel ),
    .a_reg_en(\ctrl$a_reg_en ),
    .b_mux_sel(\ctrl$b_mux_sel ),
    .b_reg_en(\ctrl$b_reg_en ),
    .clk(clk),
    .is_a_lt_b(\ctrl$is_a_lt_b ),
    .is_b_zero(\ctrl$is_b_zero ),
    .req_rdy(\ctrl$req_rdy ),
    .req_val(req_val),
    .reset(reset),
    .resp_rdy(resp_rdy),
    .resp_val(\ctrl$resp_val )
  );
  (* module_not_derived = 32'd1 *)
  (* src = "gcd.v:66.38-79.4" *)
  GcdUnitDpathRTL_0x4d0fc71ead8d3d9e dpath (
    .a_mux_sel(\ctrl$a_mux_sel ),
    .a_reg_en(\ctrl$a_reg_en ),
    .b_mux_sel(\ctrl$b_mux_sel ),
    .b_reg_en(\ctrl$b_reg_en ),
    .clk(clk),
    .is_a_lt_b(\ctrl$is_a_lt_b ),
    .is_b_zero(\ctrl$is_b_zero ),
    .req_msg_a(req_msg[31:16]),
    .req_msg_b(req_msg[15:0]),
    .reset(reset),
    .resp_msg(\dpath$resp_msg )
  );
  assign \ctrl$clk  = clk;
  assign \ctrl$req_val  = req_val;
  assign \ctrl$reset  = reset;
  assign \ctrl$resp_rdy  = resp_rdy;
  assign \dpath$a_mux_sel  = \ctrl$a_mux_sel ;
  assign \dpath$a_reg_en  = \ctrl$a_reg_en ;
  assign \dpath$b_mux_sel  = \ctrl$b_mux_sel ;
  assign \dpath$b_reg_en  = \ctrl$b_reg_en ;
  assign \dpath$clk  = clk;
  assign \dpath$is_a_lt_b  = \ctrl$is_a_lt_b ;
  assign \dpath$is_b_zero  = \ctrl$is_b_zero ;
  assign \dpath$req_msg_a  = req_msg[31:16];
  assign \dpath$req_msg_b  = req_msg[15:0];
  assign \dpath$reset  = reset;
  assign req_rdy = \ctrl$req_rdy ;
  assign resp_msg = \dpath$resp_msg ;
  assign resp_val = \ctrl$resp_val ;
endmodule
